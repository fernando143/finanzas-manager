version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fianzas_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fianzas_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-fianzas_manager}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fianzas_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fianzas_user} -d ${POSTGRES_DB:-fianzas_manager}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fianzas_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-fianzas_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-fianzas_manager}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    ports:
      - "3001:3001"
    networks:
      - fianzas_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fianzas_frontend
    ports:
      - "80:80"
    networks:
      - fianzas_network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  fianzas_network:
    driver: bridge